{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Lexurgy",
    "patterns": [{
            "include": "#comment"
        },
        {
            "include": "#symbol"
        },
        {
            "include": "#feature"
        },
        {
            "include": "#diacritic"
        },
        {
            "include": "#class"
        },
        { "include": "#class-reference" },
        { "include": "#capture-ref" }
    ],
    "repository": {
        "comment": {
            "name": "comment.line.number-sign",
            "match": "\\s*#.*"
        },
        "feature": {
            "begin": "^([Ff]eature)",
            "beginCaptures": {
                "1": {
                    "name": "keyword.other.feature.lexurgy"
                }
            },
            "patterns": [{
                    "include": "#feature-name"
                },
                {
                    "include": "#feature-list"
                },
                {
                    "include": "#feature-binary"
                }
            ],
            "end": "\\n"
        },
        "symbol": {
            "begin": "^([Ss]ymbol) ",
            "beginCaptures": {
                "1": {
                    "name": "keyword.other.symbol.lexurgy"
                }
            },
            "patterns": [{
                    "include": "#symbol-name"
                },
                {
                    "include": "#matrix"
                }
            ],
            "end": "\\n"
        },
        "diacritic": {
            "begin": "^([Dd]iacritic) ",
            "beginCaptures": {
                "1": {
                    "name": "keyword.other.symbol.lexurgy"
                }
            },
            "patterns": [{
                    "include": "#diacritic-modifier"
                },
                {
                    "include": "#diacritic-name"
                },
                {
                    "include": "#matrix"
                }
            ],
            "end": "\\n"
        },
        "class": {
            "begin": "^([Cc]lass) ",
            "beginCaptures": {
                "1": {
                    "name": "keyword.other.class.lexurgy"
                }
            },
            "patterns": [{
                    "include": "#class-name"
                },
                {
                    "include": "#symbol-list"
                }
            ],
            "end": "\\n"
        },
        "class-reference": {
            "name": "variable.other.lexurgy",
            "match": "\\@[A-Za-z0-9]+"
        },
        "capture-ref": {
            "name": "string.other.capture-ref.lexurgy",
            "match": "\\$[0-9]+"
        },

        "symbol-list": {
            "name": "meta.symbol-list.lexurgy",
            "begin": "\\{",
            "end": "\\}",
            "patterns": [{
                "include": "#symbol-name"
            }]
        },
        "feature-list": {
            "name": "meta.matrix.lexurgy",
            "begin": "\\(",
            "end": "\\)",
            "patterns": [{
                "include": "#NAME"
            }]
        },
        "feature-binary": {
            "name": "keyword.operator.binary-feature.lexurgy",
            "match": "\\+",
            "patterns": [{
                "include": "#NAME"
            }]
        },
        "matrix": {
            "name": "meta.matrix.lexurgy",
            "begin": "\\[",
            "end": "\\]",
            "patterns": [{
                "include": "#NAME"
            }]
        },
        "NAME": {
            "name": "support.type.property-name.name.lexurgy",
            "match": "[A-Za-z0-9]+"
        },
        "class-name": {
            "name": "variable.other.class-name.lexurgy",
            "match": "[A-Za-z0-9]+"
        },
        "symbol-name": {
            "name": "string.quoted.single.symbol-name.lexurgy",
            "match": "((\\\\.)|[^ \\n\\r,.=>()*\\[\\]{}+?\/\\-\\\\-_:!~$@#&])+"
        },
        "feature-name": {
            "name": "support.type.feature-name.lexurgy",
            "match": "((\\\\.)|[^ \\n\\r,.=>()*\\[\\]{}+?\/\\-\\\\-_:!~$@#&])+"
        },
        "diacritic-name": {
            "name": "string.quoted.single.diacritic-name.lexurgy",
            "match": "([A-Za-z0-9]|(\\\\.)|[^ \\n\\r,.=>()*\\[\\]{}+?\/\\-\\\\-_:!~$@#&])+"
        },
        "diacritic-modifier": {
            "name": "storage.modifier.diacritic.lexurgy",
            "match": "\\s\\(([Bb]efore)|([Aa]fter)|([Ff]loating)\\)\\s"
        }
    },
    "scopeName": "source.lexurgy"
}